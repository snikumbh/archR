% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/archR.R, R/archR_main.R
\docType{package}
\name{archR}
\alias{archR}
\title{archR: A package for discovering different architectures of sequence
elements}
\usage{
archR(
  config,
  seqsMat,
  seqsRaw,
  seqsPositions = NULL,
  thresholdItr = 3,
  setParsimony = c(FALSE, FALSE, FALSE),
  setOCollation = c(TRUE, FALSE, FALSE),
  fresh = TRUE,
  UseOC = NULL,
  oDir = NULL
)
}
\arguments{
\item{config}{archR configuration object as returned by
\code{\link{archRSetConfig()}}. This is a required argument.}

\item{seqsMat}{A matrix of one-hot encoded sequences with sequences along
columns. This is a required argument.}

\item{seqsPositions}{Vector. Specify the tick labels for sequence positions.
Default is NULL.}

\item{thresholdItr}{Numeric. Specify the number of iterations to perform.
Default is 3.}

\item{setParsimony}{Logical vector. Specify if model selection by
cross-validation should prefer parsimonious solutions. Not required when
stability-based model selection is chosen. Length of the vector should match
number of threshold iterations specified in thresholdItr argument. TRUE
denotes parsimony is followed, FALSE otherwise.}

\item{setOCollation}{Logical vector. Specify for every iteration of archR
if collation of clusters from outer chunks should be performed. TRUE denotes
clusters are collated, FALSE otherwise.}

\item{fresh}{Logical. Specify if this is (not) a fresh run. Because
archR enables checkpointing, it is possible to perform additional iterations
using an existing archR result (or a checkpoint) object. See UseOC argument.
For example, when processing a set of FASTA sequences, if an earlier call
to archR performed two iterations, and now you wish to perform a third,
arguments fresh and UseOC can be used. Simply set fresh to FALSE and assign
the sequence clusters or iteration two from the earlier result to UseOC.}

\item{UseOC}{List. Clusters from an earlier iteration of archR or archR
result.
Warning: This has not been rigorously tested yet (v0.99.4).}

\item{oDir}{Character. Specify the output directory with its path. archR
will create this directory. If a directory with the given name exists at the
given location, archR will add a suffix to the directory name. This
change is reported to the user. Default is NULL. When NULL, just the result
is returned, and no plots or checkpoints or result is written to disk.}

\item{seqRaw}{A Biostrings::DNAStringSet object. The FASTA sequences as a
DNAStringSet object. This argument required argument.}
}
\value{
Object of class archR (or at the moment, a list of lists)
}
\description{
Given a set of DNA sequences, the \code{archR} package enables discovery of
clusters of sequence with characteristic sequence architectures.

Call this function to process a data set using archR.
}
\details{
The archR package provides three categories of important functions:
related to data preparation and manipulation, performing non-negative matrix
factorization, performing clustering, and visualization-related functions.
}
\section{Functions for data preparation and manipulation}{

\itemize{
\item \code{\link{prepare_data_from_FASTA}}
\item \code{\link{get_one_hot_encoded_seqs}}
}
}

\section{Functions for visualizations}{

\itemize{
\item \code{\link{plot_ggseqlogo}}
\item \code{\link{plot_ggheatmap}}
\item \code{\link{viz_basis_vectors_as_heatmap}}
\item \code{\link{viz_basis_vectors_as_seqlogo}}
\item \code{\link{viz_basis_vectors_in_combined_heatmaps_seqlogos}}
\item \code{\link{plot_arch_for_clusters}}
\item \code{\link{viz_matrix_of_acgt}}
}
}

